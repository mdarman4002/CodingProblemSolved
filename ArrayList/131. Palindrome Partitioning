import java.util.ArrayList;
import java.util.List;

public class PalindromePartitioning131 {

    public static void main(String[] args) {
        String s = "aab";
        PalindromePartitioning131 obj = new PalindromePartitioning131();
        List<List<String>> output = obj.partition(s);
        System.out.println(output);
    }

    List<List<String>> result = new ArrayList<>();

    public List<List<String>> partition(String s) {
        List<String> list = new ArrayList<>();
        funcRecur(s, 0, list);
        return result;
    }

    public void funcRecur(String s, int partitionIndex, List<String> list) {
        if (partitionIndex == s.length()) {
            result.add(new ArrayList<>(list));
            return;
        }
        for (int i = partitionIndex; i < s.length(); i++) {
            if (isPalindrome(s, partitionIndex, i)) {
                list.add(s.substring(partitionIndex, i + 1));
                funcRecur(s, i + 1, list);
                list.remove(list.size() - 1);
            }
        }
    }

    public boolean isPalindrome(String s, int start, int end) {
        while (start < end) {
            if (s.charAt(start) != s.charAt(end)) {
                return false;
            }
            start++;
            end--;
        }
        return true;
    }
}
