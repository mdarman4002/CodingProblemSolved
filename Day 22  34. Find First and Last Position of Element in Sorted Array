class Solution {
    public int[] searchRange(int[] nums, int target) {
        int[] ans = {-1, -1};
        if (nums.length == 0) {
            return ans;
        }
        ans[0] = firstOccurence(nums, target);
        ans[1] = lastOccurence(nums, target);
        return ans;
    }
    
    public int firstOccurence(int[] nums, int target) {
        int start = 0;
        int end = nums.length - 1;
        int ans = -1;
        int mid;
        while (start <= end) {
            //mid = (start + end) / 2;
            mid = start+(end-start)/2;
            if (target == nums[mid]) {
                ans = mid;
                end = mid - 1;
            } else if (target < nums[mid]) {
                end = mid - 1;
            } else {
                start = mid + 1;
            }
        }
        return ans;
    }
    
    public int lastOccurence(int[] nums, int target) {
        int start = 0;
        int end = nums.length - 1;
        int ans = -1;
        int mid;
        while (start <= end) {
            mid = start+(end-start)/2;
            if (target == nums[mid]) {
                ans = mid;
                start = mid + 1;
            } else if (target < nums[mid]) {
                end = mid - 1;
            } else {
                start = mid + 1;
            }
        }
        return ans;
    }
}
