/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

class Solution {
    public int maxDepth(TreeNode root) {
        int max = 0;
        if(root == null){
            return 0;
        }
        int l = maxDepth(root.left); 
        int r = maxDepth(root.right);
        max = Math.max(Math.max(l,r),max) + 1;
        return max;
    }
}







// class Solution {
//     public int maxDepth(TreeNode root) {
//         if(root == null){
//             return 0;
//         }else{
//             int leftDepth = maxDepth(root.left);
//             int rightDepth = maxDepth(root.right);

//             return Math.max(leftDepth , rightDepth)+1;
//             // if(leftDepth > rightDepth){
//             //     return leftDepth + 1;
//             // }else{
//             //     return rightDepth + 1;
//             // }
//         }
//     }
// }
